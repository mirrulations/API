Transform: AWS::Serverless-2016-10-31 # Need for all SAM templates, Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html

Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
      AllowMethods: "'*'"

Resources:
  AmplifyApp:
      Type: AWS::Amplify::App
      Properties:
        Name: amplify-sam-demo-app
        Repository: https://github.com/mirrulations/mirrulations-website.git
        AccessToken: '{{resolve:secretsmanager:github-token}}'
        IAMServiceRole: !GetAtt AmplifyRole.Arn
        # EnvironmentVariables:
            # Name: ENDPOINT
            # Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"
  AmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Amplify
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "amplify:*"
                Resource: "*"
  AmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName: main
      AppId: !GetAtt AmplifyApp.AppId
      EnableAutoBuild: true
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      MethodSettings:
        - ResourcePath: /dummy
          HttpMethod: GET
          ThrottlingBurstLimit: 10 
          ThrottlingRateLimit: 20
      Domain:
        DomainName: api.mirrulations.org
        CertificateArn: arn:aws:acm:us-east-1:936771282063:certificate/6136e1ea-86d9-49e4-a2f5-ef125433b674
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: Z06776181JN8EMX6YTN2B

  ApiFunction: # Adds a GET method at the root resource via an Api event
    Type: AWS::Serverless::Function
    Properties:
      Events:
        TestGet: # This defines the url for this endpoint
          Type: Api
          Properties:
            Path: /dummy
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      CodeUri: endpoints/ 
      Handler: app.lambda_handler # this and the one above are a path to a handler
      Runtime: python3.13
      VpcConfig:
        SecurityGroupIds:
          - sg-03e2bf8d3930f3c42
        SubnetIds:
          - subnet-0548c79ad1faa1117
          - subnet-0e157bfea98242a74
          - subnet-049c40a73343487e5
          - subnet-06bae533696203b97
          - subnet-073247252e9c9fa78
          - subnet-0e157bfea98242a74
      Layers:
        - arn:aws:lambda:us-east-1:936771282063:layer:psycopg-import:1
        - arn:aws:lambda:us-east-1:936771282063:layer:aoss-imports:2
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'  # Add Secrets Manager permissions
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:936771282063:secret:mirrulationsdb/postgres/master-uA4mKl" 
        - Version: '2012-10-17'  # Add Secrets Manager permissions
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: "arn:aws:secretsmanager:us-east-1:936771282063:secret:mirrulationsdb/opensearch/master-7xJt7C"
      Environment:
        Variables:
          DB_SECRET_NAME: "mirrulationsdb/postgres/master"
          OS_SECRET_NAME: "mirrulationsdb/opensearch/master"
      Timeout: 15 
      Role: arn:aws:iam::936771282063:role/334s25_lambda_execution_opensearch